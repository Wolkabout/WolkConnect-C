name: CMake

on: [push]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt update && sudo apt-get install -y libz-dev wget gcc g++ cmake libssl-dev clang-format ruby valgrind doxygen

    - name: Install Unit Test toolset
      run: sudo gem install ceedling

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: ./configure

    - name: Build
      working-directory: ${{github.workspace}}/out
      shell: bash
      # Execute the out.  You can specify a specific target with "--target <NAME>"
      run: sudo make all -j$(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/out
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make tests

    - name: Doxygen Action
      run: doxygen
      shell: bash

    - name: Documentation Deployment
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
